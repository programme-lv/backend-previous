package graphql

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.34

import (
	"context"
	"log"

	"github.com/programme-lv/backend/internal/execution"
)

// ExecuteCode is the resolver for the executeCode field.
func (r *mutationResolver) ExecuteCode(ctx context.Context, code string, languageID string) (*ExecutionResult, error) {
	log.Println("Executing code in language", languageID, ":", code)
	factory := execution.ExecuterFactory{DB: r.DB}
	executable, err := factory.NewExecuter(languageID, code)
	if err != nil {
		return nil, err
	}
	defer executable.Cleanup()

	// execute code
	result, err := executable.Execute()
	if err != nil {
		return nil, err
	}

	return &ExecutionResult{
		Stdout: result.Stdout,
		Stderr: result.Stderr,
	}, nil
}
