package graphql

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.35

import (
	"context"
	"log"

	"github.com/programme-lv/backend/internal/models"
)

// ListLanguages is the resolver for the listLanguages field.
func (r *queryResolver) ListLanguages(ctx context.Context) ([]*Language, error) {
	log.Println("Received request for languages")

	var langs []models.ProgrammingLanguage
	err := r.DB.Select(&langs, "SELECT * FROM programming_languages")
	if err != nil {
		return nil, err
	}

	// convert to graphql type
	var gqlLangs []*Language
	for _, lang := range langs {
		gqlLangs = append(gqlLangs, &Language{
			ID:       lang.ID,
			FullName: lang.FullName,
			MonacoID: lang.MonacoId,
		})
	}

	return gqlLangs, nil
}
