package graphql

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.35

import (
	"context"
	"fmt"
)

// CreateTask is the resolver for the createTask field.
func (r *mutationResolver) CreateTask(ctx context.Context, name string) (*Task, error) {
	panic(fmt.Errorf("not implemented: CreateTask - createTask"))
}

// UpdateTaskMetadata is the resolver for the updateTaskMetadata field.
func (r *mutationResolver) UpdateTaskMetadata(ctx context.Context, id string, authors []string, origin *string) (*Task, error) {
	panic(fmt.Errorf("not implemented: UpdateTaskMetadata - updateTaskMetadata"))
}

// UpdateTaskDescription is the resolver for the updateTaskDescription field.
func (r *mutationResolver) UpdateTaskDescription(ctx context.Context, id string, code *string, name *string, story *string, input *string, output *string, notes *string) (*Task, error) {
	panic(fmt.Errorf("not implemented: UpdateTaskDescription - updateTaskDescription"))
}

// UpdateTaskExamples is the resolver for the updateTaskExamples field.
func (r *mutationResolver) UpdateTaskExamples(ctx context.Context, id string, inputs []string, outputs []string) (*Task, error) {
	panic(fmt.Errorf("not implemented: UpdateTaskExamples - updateTaskExamples"))
}

// UpdateTaskConstraints is the resolver for the updateTaskConstraints field.
func (r *mutationResolver) UpdateTaskConstraints(ctx context.Context, id string, timeLimitMs *int, memoryLimitKb *int) (*Task, error) {
	panic(fmt.Errorf("not implemented: UpdateTaskConstraints - updateTaskConstraints"))
}

// DeleteTask is the resolver for the deleteTask field.
func (r *mutationResolver) DeleteTask(ctx context.Context, id string) (*Task, error) {
	panic(fmt.Errorf("not implemented: DeleteTask - deleteTask"))
}

// ListTasks is the resolver for the listTasks field.
func (r *queryResolver) ListTasks(ctx context.Context) ([]*Task, error) {
	panic(fmt.Errorf("not implemented: ListTasks - listTasks"))
}

// GetTask is the resolver for the getTask field.
func (r *queryResolver) GetTask(ctx context.Context, id string) (*Task, error) {
	panic(fmt.Errorf("not implemented: GetTask - getTask"))
}

// ListTaskOrigins is the resolver for the listTaskOrigins field.
func (r *queryResolver) ListTaskOrigins(ctx context.Context) ([]string, error) {
	panic(fmt.Errorf("not implemented: ListTaskOrigins - listTaskOrigins"))
}
