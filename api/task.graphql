extend type Query {
    """
    Returns a list of all tasks that have a published version.
    Used for rendering the public task view.
    """
    listPublishedTasks: [Task!]!

    """
    Finds the task id associated with the published task code.
    Returns the stable version of that task.
    """
    getStableTaskVersionByPublishedTaskCode(taskCode: String!): TaskVersion!

    """
    Returns the latest version of a task.
    Used for task preparation / development / editing.
    """
    getCurrentTaskVersionByTaskID(taskID: ID!): TaskVersion!

    """
    Returns a list of all tasks that are editable by the current user.
    Used for rendering the editable task list in task constructor.
    """
    listEditableTasks: [Task!]!
}

extend type Mutation {
    """
    Creates a new task with the given name and code.
    Only admins can create tasks.
    The default task version is assigned to the task.
    """
    createTask(name: String!, code: String!): Task!

    updateTaskVersionStatement(taskVersionID: ID!, statement: StatementInput!): TaskVersion!

    deleteTask(taskID: ID!): Boolean!
}

# time is marshalled as RFC3339

type Task {
    taskID: ID!

    current: TaskVersion! # only for authorized users
    stable: TaskVersion

    createdAt: String!
    updatedAt: String!
}

type TaskVersion {
    versionID: ID!

    code: String!
    name: String!

    description: Description!
    constraints: Constraints!
    metadata: Metadata!

    createdAt: String!
}

type Description {
    story: String!
    input: String!
    output: String!

    examples: [Example!]
    notes: String
}

type Constraints {
    timeLimitMs: Int!
    memoryLimitKb: Int!
}

type Metadata {
    authors: [String!]
    origin: String
}

type Example {
    input: String!
    answer: String!
}

type Test {
    testID: ID!

    name: String!
    input: String!
    answer: String!
}

input StatementInput {
    story: String
    input: String
    output: String
    notes: String
}
