type Query {
  whoami: User
  listSubmissions: [Submission!]!
  listLanguages: [Language!]!
  listTasks: [Task!]!
}

type Mutation {
  login(username: String!, password: String!): User!
  register(username: String!, password: String!, email: String!, firstName: String!, lastName: String!): User!
  logout: Boolean!

  enqueueSubmission(taskID: ID!, languageID: ID!,code: String!): Submission!
  executeCode(code: String!, languageID: ID!): ExecutionResult!

  createTask(id: String!,fullName: String!): Task!
  updateTask(id: ID!, fullName: String!, origin: String, authors: [String!]!): Task!

  createTaskVersion: TaskVersion!
  updateTaskVersion(id: ID!, versionName: String, timeLimitMs: Int, memoryLimitMb: Int, evalTypeID: ID): TaskVersion!
}

type Language {
  id: ID!
  fullName: String!
  monacoID: ID!
}

type User {
  id: ID!
  username: String!
  email: String!
  firstName: String!
  lastName: String!
}

type Submission {
  id: ID!
  task: Task!
  language: Language!
  code: String!
}

type ExecutionResult {
  stdout: String!
  stderr: String!
}

type Task {
  id: ID!
  fullName: String!
  origin: String
  authors: [String!]!
  versions: [TaskVersion!]!
}

type TaskVersion {
  id: ID!
  versionName: String!
  timeLimitMs: Int!
  memoryLimitMb: Int!
  evalType: EvalType!
  createdAt: String!
  updatedAt: String
}

type EvalType {
  id: ID!
  descriptionEn: String!
}
