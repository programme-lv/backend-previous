extend type Subscription {
  """
  Subscribes to new public submissions for tasks with a published task code.
  Only submissions that are not hidden (like those by admins for testing) will be streamed.
  """
  onNewPublicSubmission: Submission!

  """
  Subscribes to updates on an existing submission, including changes to its evaluation status or scores.
  Clients must provide the submission ID to receive targeted updates.
  """
  onSubmissionUpdate(submissionId: ID!): Submission!
}

extend type Query {
  """
  Returns all visible (not hidden) submissions for tasks that have a published task code.
  An example of a hidden submission is a submission made by an admin for testing purposes.
  """
  listPublicSubmissions: [Submission]!

  getSubmission(id: ID!): Submission!

  """
  Returns a list of all published task codes for tasks that the user has solved.
  """
  listSolvedPublishedTaskCodesByUsername(username: String!): [String!]!
}

extend type Mutation {
  enqueueSubmissionForPublishedTaskCodeStableTaskVersion(
    taskCode: String!
    languageID: ID!
    submissionCode: String!
  ): Submission!
}

type Submission {
  id: ID!
  taskFullName: String!
  taskCode: String!
  authorUsername: String!
  progLang: ProgrammingLanguage!
  submissionCode: String!
  evalResults: Evaluation!
  createdAt: String! # RFC3339
}

type ShallowEvaluation {
  id: ID!
  status: String!
  
  totalScore: Int!
  possibleScore: Int
}

type Evaluation {
  id: ID!
  status: String!

  totalScore: Int!
  possibleScore: Int

#  runtimeStatistics: RuntimeStatistics

  """
  Some programming languages do not support compilation, so this field may be null.
  """
  compileRData: RuntimeData

  testResults: [TestResult!]!
}

#type RuntimeStatistics {
#  avgTimeMs: Int!
#  maxTimeMs: Int!
#  avgMemoryKb: Int!
#  maxMemoryKb: Int!
#}

type RuntimeData {
  timeMs: Int! # milliseconds
  memoryKb: Int! # kilobytes
  exitCode: Int!
  stdout: String!
  stderr: String!
}

type TestResult {
  id: ID!
  testID: ID!
  userProgramRData: RuntimeData
  checkerRData: RuntimeData
  finalVerdict: TestResultType!
}

enum TestResultType {
  AC # Accepted
  PT # Partially correct
  WA # Wrong answer
  PE # Presentation error
  TLE # Time limit exceeded
  MLE # Memory limit exceeded
  ILE # Idleness limit exceeded
  IG # Ignored (doesn't impact final score)
  RE # Runtime error
  SV # Security violation
  ISE # Internal server error
}
